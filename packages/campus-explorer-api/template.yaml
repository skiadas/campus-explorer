AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: |
  campus-explorer-api
  Sample SAM Template for campus-explorer-api
Globals:
  Api:
    Cors:
      AllowOrigin: "'*'"
      AllowHeaders: "'Content-Type'"
  Function:
    Timeout: 3
Resources:
  PostImageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: packages/campus-explorer-api-lib
      Handler: index.handlePostImageFunction
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Environment:
        Variables:
          databaseName: !Select [1, !Split ['/', !GetAtt SubmittedImagesTable.Arn]]
          bucketName: !Ref SubmittedImagesBucket
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /feedbackSubmit
            Method: post
      Policies:
        - DynamoDBWritePolicy:
            TableName:
              !Select [1, !Split ['/', !GetAtt SubmittedImagesTable.Arn]]
        - S3CrudPolicy:
            BucketName: !Ref SubmittedImagesBucket
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - src/index.ts
  SubmittedImagesBucket:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
  SubmittedImagesBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref SubmittedImagesBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: '*'
            Action: s3:GetObject
            Resource: !Sub 'arn:aws:s3:::${SubmittedImagesBucket}/*'
  SubmittedImagesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: featureId
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: 'HASH'
        - AttributeName: featureId
          KeyType: 'RANGE'
      BillingMode: PAY_PER_REQUEST
Outputs:
  CampusExplorerApi:
    Description: 'API Gateway endpoint URL for Prod stage for Hello World function'
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/'
  PostImageFunction:
    Description: PostImageFunction ARN
    Value: !GetAtt PostImageFunction.Arn
  PostImageFunctionIamRole:
    Description: Implicit IAM Role created for PostImageFunction
    Value: !GetAtt PostImageFunctionRole.Arn
  SubmittedImagesBucketName:
    Description: Assigned name for SubmittedImagesBucket
    Value: !Ref SubmittedImagesBucket
  SubmittedImagesBucketArn:
    Description: SubmittedImagesBucket ARN
    Value: !GetAtt SubmittedImagesBucket.Arn
  SubmittedImagesBucketDomainName:
    Description: Domain name for SubmittedImagesBucket
    Value: !GetAtt SubmittedImagesBucket.DomainName
  SubmittedImagesBucketWebsiteURL:
    Description: WebsiteURL for SubmittedImagesBucket
    Value: !GetAtt SubmittedImagesBucket.WebsiteURL
